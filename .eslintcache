[{"/Users/nimrodgaver/Desktop/epicure/src/index.tsx":"1","/Users/nimrodgaver/Desktop/epicure/src/reportWebVitals.ts":"2","/Users/nimrodgaver/Desktop/epicure/src/App.tsx":"3","/Users/nimrodgaver/Desktop/epicure/src/components/Footer/footer.tsx":"4","/Users/nimrodgaver/Desktop/epicure/src/components/About/About.tsx":"5","/Users/nimrodgaver/Desktop/epicure/src/components/HeroHeader/HeroHeader.tsx":"6","/Users/nimrodgaver/Desktop/epicure/src/components/NavBar/NavBar.tsx":"7","/Users/nimrodgaver/Desktop/epicure/src/components/IconsMeaning/iconMeaning.tsx":"8","/Users/nimrodgaver/Desktop/epicure/src/pages/Home/Home.tsx":"9","/Users/nimrodgaver/Desktop/epicure/src/components/WeeklyChef/WeeklyChef.tsx":"10","/Users/nimrodgaver/Desktop/epicure/src/components/SideMenu/SideMenu.tsx":"11","/Users/nimrodgaver/Desktop/epicure/src/global.ts":"12","/Users/nimrodgaver/Desktop/epicure/src/components/NavBar/styled.js":"13","/Users/nimrodgaver/Desktop/epicure/src/pages/Restaurants/restaurantsList.tsx":"14","/Users/nimrodgaver/Desktop/epicure/src/components/Cards/Card.tsx":"15","/Users/nimrodgaver/Desktop/epicure/src/components/PopularRest/PopularRest.tsx":"16","/Users/nimrodgaver/Desktop/epicure/src/components/SignatureDish/SignatureDish.tsx":"17","/Users/nimrodgaver/Desktop/epicure/src/firebase.js":"18","/Users/nimrodgaver/Desktop/epicure/src/pages/Dishes/DishList.tsx":"19","/Users/nimrodgaver/Desktop/epicure/src/components/Modal/Modal.tsx":"20"},{"size":500,"mtime":1610969718545,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1610969718546,"results":"23","hashOfConfig":"22"},{"size":1024,"mtime":1612281994365,"results":"24","hashOfConfig":"22"},{"size":1174,"mtime":1611507101005,"results":"25","hashOfConfig":"22"},{"size":4691,"mtime":1611588597584,"results":"26","hashOfConfig":"22"},{"size":2889,"mtime":1611507101005,"results":"27","hashOfConfig":"22"},{"size":2070,"mtime":1612100098771,"results":"28","hashOfConfig":"22"},{"size":2982,"mtime":1611507101005,"results":"29","hashOfConfig":"22"},{"size":2058,"mtime":1612100191802,"results":"30","hashOfConfig":"22"},{"size":2393,"mtime":1612100148915,"results":"31","hashOfConfig":"22"},{"size":2299,"mtime":1611734579008,"results":"32","hashOfConfig":"22"},{"size":1025,"mtime":1611475100326,"results":"33","hashOfConfig":"22"},{"size":3387,"mtime":1612272105883,"results":"34","hashOfConfig":"22"},{"size":3887,"mtime":1612270835000,"results":"35","hashOfConfig":"22"},{"size":5746,"mtime":1612285374554,"results":"36","hashOfConfig":"22"},{"size":1303,"mtime":1611734762520,"results":"37","hashOfConfig":"22"},{"size":1907,"mtime":1612282963196,"results":"38","hashOfConfig":"22"},{"size":525,"mtime":1612081759693,"results":"39","hashOfConfig":"22"},{"size":6549,"mtime":1612286420181,"results":"40","hashOfConfig":"22"},{"size":7577,"mtime":1612286534463,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"xlfnqk",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nimrodgaver/Desktop/epicure/src/index.tsx",[],["86","87"],"/Users/nimrodgaver/Desktop/epicure/src/reportWebVitals.ts",[],"/Users/nimrodgaver/Desktop/epicure/src/App.tsx",["88","89"],"import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport firebase from \"./firebase\";\n// import styled from \"styled-components\";\nimport { GlobalStyle } from \"./global\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Home from \"./pages/Home/Home\";\nimport Restaurants from \"./pages/Restaurants/restaurantsList\";\nimport Dishes from \"./pages/Dishes/DishList\";\n// import dishPreview from \"./pages/Restaurants/dishPreview\";\nimport Footer from \"./components/Footer/footer\";\n\nfunction App() {\n  \n  useEffect(() => {\n      const db = firebase.firestore();\n  },[]);\n\n  return (\n    <Router>\n      <GlobalStyle />\n      <div className=\"App\">\n        <NavBar />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/restaurants\" exact component={Restaurants}/>\n        <Route path=\"/restaurants/:id\" component={Dishes}/>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/nimrodgaver/Desktop/epicure/src/components/Footer/footer.tsx",[],"/Users/nimrodgaver/Desktop/epicure/src/components/About/About.tsx",[],"/Users/nimrodgaver/Desktop/epicure/src/components/HeroHeader/HeroHeader.tsx",[],"/Users/nimrodgaver/Desktop/epicure/src/components/NavBar/NavBar.tsx",[],"/Users/nimrodgaver/Desktop/epicure/src/components/IconsMeaning/iconMeaning.tsx",[],"/Users/nimrodgaver/Desktop/epicure/src/pages/Home/Home.tsx",[],"/Users/nimrodgaver/Desktop/epicure/src/components/WeeklyChef/WeeklyChef.tsx",[],"/Users/nimrodgaver/Desktop/epicure/src/components/SideMenu/SideMenu.tsx",[],"/Users/nimrodgaver/Desktop/epicure/src/global.ts",[],"/Users/nimrodgaver/Desktop/epicure/src/components/NavBar/styled.js",[],["90","91"],"/Users/nimrodgaver/Desktop/epicure/src/pages/Restaurants/restaurantsList.tsx",["92"],"import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Card from \"../../components/Cards/Card\";\nimport firebase from \"firebase\";\n\nconst RestaurantsList = () => {\n  const [restaurants, setRestaurants] = useState<any[]>([]);\n  const [filteredRest, setfilteredRest] = useState<any[]>([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    const db = firebase.firestore();\n    let restaurantsRef = db.collection(\"restaurants\");\n    let allRestaurants = await restaurantsRef.get();\n    let dataArray: any = [];\n    for (const doc of allRestaurants.docs) {\n      dataArray.push({ ...doc.data(), id: doc.id });\n    }\n    setRestaurants(dataArray);\n    setfilteredRest(dataArray)\n    console.log(restaurants);\n  };\n\n  const filterHandler = (e: any) => {\n    if (e.target.value === \"all\") {\n      setfilteredRest(restaurants.filter((card) => card));\n    }\n    if (e.target.value === \"new\") {\n      setfilteredRest(restaurants.filter((card) => card.new));\n    }\n    if (e.target.value === \"open\") {\n      setfilteredRest(restaurants.filter((card) => card.open));\n    }\n    if (e.target.value === \"popular\") {\n      setfilteredRest(restaurants.filter((card) => card.popular));\n    }\n  };\n\n  return (\n    <RestarauntContainer>\n      <FilterContainer>\n        <button value=\"all\" onClick={(e) => filterHandler(e)}>\n          All\n        </button>\n        <button value=\"new\" onClick={(e) => filterHandler(e)}>\n          New\n        </button>\n        <button value=\"popular\" onClick={(e) => filterHandler(e)}>\n          Most Popular\n        </button>\n        <button value=\"open\" onClick={(e) => filterHandler(e)}>\n          Open Now\n        </button>\n      </FilterContainer>\n      <Cardscontainer>\n        {filteredRest.map((card: any) => {\n          return (\n            <Link key={card.id} to={`/restaurants/${card.id}`}>\n              <Card\n              key={card.id}\n              id={card.id}\n                title={card.title}\n                body={card.body}\n                img={card.image}\n                alt={card.alt}\n                cardData={card}\n                isRest={card.type}\n              />\n            </Link>\n          );\n        })}\n      </Cardscontainer>\n    </RestarauntContainer>\n  );\n};\n\nexport default RestaurantsList;\n\nconst RestarauntContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 10%;\n  padding-right: 10%;\n  a:link {\n    text-decoration: none;\n    color: black;\n  }\n  a:visited {\n    text-decoration: none;\n    color: black;\n  }\n  a:hover {\n    text-decoration: none;\n    color: black;\n  }\n\n  @media screen and (max-width: 550px) {\n    display: flex;\n    flex-direction: column;\n    padding-left: 0;\n    padding-right: 0;\n    align-items: center;\n  }\n`;\n\nconst Cardscontainer = styled.section`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  /* padding: 1em; */\n  grid-row-gap: 30px;\n\n  @media only screen and (max-width: 550px) {\n    grid-template-columns: 1fr 1fr;\n    grid-row-gap: 1px;\n  }\n`;\nconst FilterContainer = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 3vh;\n  margin-top: 5vh;\n  button {\n    height: 21px;\n    margin: 1px 36.3px 0;\n    font-family: HelveticaNeue;\n    font-size: 1.3rem;\n    font-weight: 100;\n    letter-spacing: 1.92px;\n    color: gray;\n    border: none;\n    background-color: white;\n    cursor: pointer;\n    outline: none;\n  }\n  button:active {\n    color: black;\n  }\n  button:focus {\n    color: black;\n  }\n\n  @media only screen and (max-width: 550px) {\n    justify-content: space-evenly;\n    /* width: 80%; */\n    button {\n      height: 21px;\n      margin: 0;\n      font-family: HelveticaNeue;\n      font-size: 1rem;\n    }\n  }\n`;\n","/Users/nimrodgaver/Desktop/epicure/src/components/Cards/Card.tsx",["93"],"/Users/nimrodgaver/Desktop/epicure/src/components/PopularRest/PopularRest.tsx",[],"/Users/nimrodgaver/Desktop/epicure/src/components/SignatureDish/SignatureDish.tsx",[],"/Users/nimrodgaver/Desktop/epicure/src/firebase.js",[],"/Users/nimrodgaver/Desktop/epicure/src/pages/Dishes/DishList.tsx",["94"],"/Users/nimrodgaver/Desktop/epicure/src/components/Modal/Modal.tsx",["95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":18},{"ruleId":"100","severity":1,"message":"104","line":19,"column":13,"nodeType":"102","messageId":"103","endLine":19,"endColumn":15},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"105","severity":1,"message":"106","line":14,"column":6,"nodeType":"107","endLine":14,"endColumn":8,"suggestions":"108"},{"ruleId":"100","severity":1,"message":"109","line":226,"column":7,"nodeType":"102","messageId":"103","endLine":226,"endColumn":22},{"ruleId":"105","severity":1,"message":"110","line":25,"column":6,"nodeType":"107","endLine":25,"endColumn":8,"suggestions":"111"},{"ruleId":"100","severity":1,"message":"112","line":2,"column":20,"nodeType":"102","messageId":"103","endLine":2,"endColumn":29},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'db' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["115"],"'CardContentDish' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchData' and 'fetchHeader'. Either include them or remove the dependency array.",["116"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [fetchData]",{"range":"121","text":"122"},"Update the dependencies array to be: [fetchData, fetchHeader]",{"range":"123","text":"124"},[439,441],"[fetchData]",[783,785],"[fetchData, fetchHeader]"]